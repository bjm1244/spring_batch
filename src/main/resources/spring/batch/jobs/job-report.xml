<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/task
   		http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- Job : reader, writer, commit-interval, timeout, retry-limit(DeadlockLoserDataAccessException) -->
	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="xmlItemReader" writer="mysqlItemWriter"
					commit-interval="1" retry-limit="3">
					<batch:retryable-exception-classes>
          				<batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
         			</batch:retryable-exception-classes>
				</batch:chunk>
				<batch:transaction-attributes timeout="30"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<!-- Read rootElement, resource in server, unmarshaller(map-value) -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="record" />
		<property name="resource" value="http://localhost:8888/report.xml" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
	</bean>

	<!-- Read and map values to object model VO -->
	<bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.batch.model.VO</value>
			</list>
		</property>
	</bean>
	
	<!-- Write in mysql(insert)-->
	<bean id="mysqlItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
            <![CDATA[        
            	insert into record(refId, age, name) values (:refId, :age, :name)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	
	<!-- scheduler -->
	<bean id="runScheduler" class="com.batch.RunScheduler" />
	<!-- Run every 5 seconds -->
	<task:scheduled-tasks>
		<task:scheduled ref="runScheduler" method="run"
			cron="*/20 * * * * *" />
	</task:scheduled-tasks>

</beans>
